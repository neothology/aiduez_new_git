envs: 
  workspace_dir: /aihub/workspace
  tmp_dir: /aihub/workspace/_tmp

class_paths:
  # components - layout & menu
  background: components.layouts.BackGround
  top_area: components.layouts.TopArea
  side_nav: components.layouts.SideNav
  list_menu: views.menus.ListMenu
  work_area: components.layouts.WorkArea
  tab_menu:  views.tabular.menus.TabMenu
  list_menu_sub: views.tabular.menus.ListMenuSub

  sub_area: components.layouts.SubArea
  sub_menu_area: components.layouts.SubMenuArea
  
  # other common components
  column_summary: components.data_profiler.ColumnSummary
  column_summary_simple: components.data_profiler.ColumnSummarySimple
  base_overlay: components.overlays.BaseOverlay
  progress_linear: components.progress.ProgressLinear
  alert: components.alerts.Alert
  select_table_card: components.tables.SelectTableCard
  select_table_card_no_header: components.tables.SelectTableCardNH
  simple_slider_card: components.forms.SimpleSliderCard
  simple_slider: components.forms.SimpleSlider
  simple_radio_card: components.forms.SimpleRadioCard
  simple_input_card: components.forms.SimpleInputCard
  simple_datatable_card: components.forms.SimpleDataTableCard
  edap_data_table: components.tables.EdapDataTable
  data_info: components.data_profiler.DataInfo
  select_autocomplete: components.forms.SelectAutoComplete
  datatable: components.tables.DataTable
  simple_range_card: components.forms.SimpleRangeCard
  
  # task
  task_recent: tasks.TaskRecent
  task_recent_view: views.tasks.TaskRecentView
  task_favorite: tasks.TaskFavorite
  task_favorite_view: views.tasks.TaskFavoriteView
  task_all: tasks.TaskAll
  task_all_view: views.tasks.TaskAllView

  # tabular
  tabular_base: workflows.tabular.TabularBase
  tabular_workbook: workbooks.TabularWorkbook
  tabular_dataset: components.dataset.TabularDataset
  tabular_data_context: components.dataset.TabularDataContext
  tabular_model: views.tabular.training.TabularModel

  tabular_data_import: workflows.tabular.TabularDataImport
  tabular_import_pc: tabular.imports.TabularImportPC
  tabular_import_pc_view: views.tabular.imports.TabularImportPCView
  tabular_import_aidu: tabular.imports.TabularImportAIDU
  tabular_import_aidu_view: views.tabular.imports.TabularImportAIDUView
  tabular_import_edap: tabular.imports.TabularImportEDAP
  tabular_import_edap_view: views.tabular.imports.TabularImportEDAPView

  tabular_data_analytics: workflows.tabular.TabularDataAnalytics
  tabular_data_analytics_options: views.tabular.analytics.TabualrAnalyticsOptionArea
  tabular_analytics_basicinfo: tabular.analytics.TabularaAnalyticsBasicinfo
  tabular_analytics_basicinfo_view: views.tabular.analytics.TabularaAnalyticsBasicinfoView
  tabular_analytics_scatter: tabular.analytics.TabularAnalyticsScatter
  tabular_analytics_scatter_view: views.tabular.analytics.TabularAnalyticsScatterView
  tabular_analytics_heatmap: tabular.analytics.TabularAnalyticsHeatmap
  tabular_analytics_heatmap_view: views.tabular.analytics.TabularAnalyticsHeatmapView
  tabular_analytics_boxplot: tabular.analytics.TabularAnalyticsBoxplot
  tabular_analytics_boxplot_view: views.tabular.analytics.TabularAnalyticsBoxplotView
  tabular_analytics_density: tabular.analytics.TabularAnalyticsDensity
  tabular_analytics_density_view: views.tabular.analytics.TabularAnalyticsDensityView
  tabular_analytics_wcloud: tabular.analytics.TabularAnalyticsWordCloud
  tabular_analytics_wcloud_view: views.tabular.analytics.TabularAnalyticsWordCloudView
  tabular_analytics_reduction: tabular.analytics.TabularAnalyticsReduction
  tabular_analytics_reduction_view: views.tabular.analytics.TabularAnalyticsReductionView
  tabular_analytics_clustering: tabular.analytics.TabularAnalyticsClustering
  tabular_analytics_clustering_view: views.tabular.analytics.TabularAnalyticsClusteringView
  tabular_analytics_datasample: tabular.analytics.TabularAnalyticsDataSample
  tabular_analytics_datasample_view: views.tabular.analytics.TabularAnalyticsDataSampleView

  tabular_data_processing: workflows.tabular.TabularDataProcessing
  tabular_data_processing_save_activator: views.tabular.processing.TabularProcessingSaveActivator
  tabular_data_processing_options: views.tabular.processing.TabularProcessingOptionArea
  tabular_data_single_processing_view: views.tabular.processing.TabularSingleProcessingView
  tabular_data_single_processing_dialog_view: views.tabular.processing.TabularSingleProcessingDialogView
  tabular_data_multiple_processing_view: views.tabular.processing.TabularMultipleProcessingView
  # tabular_data_single_processing_card: views.tabular.processing.TabularSingleProcessingCard

  tabular_ai_training: workflows.tabular.TabularAITraining
  tabular_training_options: views.tabular.training.TabularTrainingOptions
  tabular_train_activator: views.tabular.training.TabularTrainActivator
  tabular_train_result: views.tabular.training.TabularTrainResult
  
  tabular_ai_evaluation: workflows.tabular.TabularAIEvaluation
  
  text_base: workflows.text.TextBase
  text_data_import: workflows.text.TextDataImport
  text_data_analytics: workflows.text.TextDataanalytics
  text_data_processing: workflows.text.TextDataProcessing
  text_ai_training: workflows.text.TextAITraining
  text_ai_evaluation: workflows.text.TextAIEvaluation

  image_base: workflows.image.ImageBase
  image_data_import: workflows.image.ImageDataImport
  image_data_analytics: workflows.image.ImageDataanalytics
  image_data_processing: workflows.image.ImageDataProcessing
  image_ai_training: workflows.image.ImageAITraining
  image_ai_evaluation: workflows.image.ImageAIEvaluation

  audio_base: workflows.audio.AudioBase
  audio_data_import: workflows.audio.AudioDataImport
  audio_data_analytics: workflows.audio.AudioDataanalytics
  audio_data_processing: workflows.audio.AudioDataProcessing
  audio_ai_training: workflows.audio.AudioAITraining
  audio_ai_evaluation: workflows.audio.AudioAIEvaluation

  video_base: workflows.video.VideoBase
  video_data_import: workflows.video.VideoDataImport
  video_data_analytics: workflows.video.VideoDataanalytics
  video_data_processing: workflows.video.VideoDataProcessing
  video_ai_training: workflows.video.VideoAITraining
  video_ai_evaluation: workflows.video.VideoAIEvaluation

side_nav_menu_list:
  default: task_recent
  target_area: work_area
  menu_list:
    - 
      icon: mdi-history
      title: 최근 작업
      target: task_recent
    - 
      icon: mdi-star-outline
      title: 즐겨 찾기
      target: task_favorite
    - 
      icon: mdi-file-table-box-outline
      title: 전체 작업
      target: task_all
    - 
      icon: mdi-plus
      title: 신규 작업
      sub_menu:
      - 
        icon: mdi-border-all
        title: 테이블
        target: tabular_base
      - 
        icon: mdi-translate
        title: 텍스트
        target: text_base
      - 
        icon: mdi-image-outline
        title: 이미지
        target: image_base
      - 
        icon: mdi-volume-high
        title: 오디오
        target: audio_base
      - 
        icon: mdi-video-check-outline
        title: 비디오
        target: video_base

workflows_list:
  tabular:
    default: tabular_data_import
    target_area: tabular_contents
    stages:
      - 
        title: 데이터 입수
        target: tabular_data_import
      - 
        title: 데이터 분석
        target: tabular_data_analytics
      - 
        title: 데이터 가공
        target: tabular_data_processing
        menu_list: 
          -
            icon: mdi-clipboard-text-outline
            title: 단일 칼럼 변환
            target: tabular_data_single_processing_view
          -
            icon: mdi-clipboard-text-multiple-outline
            title: 복합 칼럼 변환
            target: tabular_data_multiple_processing_view
      - 
        title: AI모델 학습
        target: tabular_ai_training
      # - 
      #   title: AI모델 평가
      #   target: tabular_ai_evaluation
  text:
    default: text_data_import
    target_area: text_contents
    stages:
      - 
        title: 데이터 입수
        target: text_data_import
      - 
        title: 데이터 분석
        target: text_data_analytics
      - 
        title: 데이터 가공
        target: text_data_processing
      - 
        title: AI모델 학습
        target: text_ai_training
      - 
        title: AI모델 평가
        target: text_ai_evaluation
  image:
    default: image_data_import
    target_area: image_contents
    stages:
      - 
        title: 데이터 입수
        target: image_data_import
      - 
        title: 데이터 분석
        target: image_data_analytics
      - 
        title: 데이터 가공
        target: image_data_processing
      - 
        title: AI모델 학습
        target: image_ai_training
      - 
        title: AI모델 평가
        target: image_ai_evaluation
  audio:
    default: audio_data_import
    target_area: audio_contents
    stages:
      - 
        title: 데이터 입수
        target: audio_data_import
      - 
        title: 데이터 분석
        target: audio_data_analytics
      - 
        title: 데이터 가공
        target: audio_data_processing
      - 
        title: AI모델 학습
        target: audio_ai_training
      - 
        title: AI모델 평가
        target: audio_ai_evaluation
  video:
    default: video_data_import
    target_area: video_contents
    stages:
      - 
        title: 데이터 입수
        target: video_data_import
      - 
        title: 데이터 분석
        target: video_data_analytics
      - 
        title: 데이터 가공
        target: video_data_processing
      - 
        title: AI모델 학습
        target: video_ai_training
      - 
        title: AI모델 평가
        target: video_ai_evaluation

# theme 정의
theme:
  ez_default:    
    # layouts
    background:
      style: 
        base: 
          default: >
            min-width:1920px; max-width:1920px !important;border-right:1px dashed #cccccc;
            height: 1800px; margin:0px; padding:0;
            background-color:#f1f5f9; z-index:0;
            display:flex;
            left:0;
          dark: >
            min-width:1920px; max-width:1920px !important; border-right:1px dashed #cccccc;
            height: 1800px; margin:0px; padding:0;
            background-color:#000000; z-index:0;
            display:flex;
            left:0;
    side_nav:
      style: 
        base:
          default: >
            min-width:250px; height:1800px; 
            padding:10px; z-index:1000; 
            display:flex; flex-direction:column; 
            background-color:#0f172a;
            position:absolute;
    top_area:
      style: 
        base:
          default: >
            height:199px; padding:10px; 
            box-shadow:none; border:0; 
            border-bottom:1px solid #e2e8f0; 
            background-color: rgb(30, 41, 59);
            z-index:776;
            min-width:1920px; max-width:1920px;border-right:1px dashed #cccccc;
            position:absolute;
          light: >
            height:199px; padding:10px; 
            min-width:100%;
            box-shadow:none; border:0; 
            border-bottom:1px solid #e2e8f0; 
            background-color: #ffffff;
            z-index:776;
            min-width:1920px; max-width:1920px;border-right:1px dashed #cccccc;
            position:absolute;
        nav_icon:
          default: >
            min-width:50px; max-width:50px; margin:0; padding:0;
          light: >
            min-width:50px; max-width:50px; margin:0; padding:0;
        nav_icon_icon:
          default: >
            color:#ffffff;
          light: >
            color:#000000;
        logo_image:
          default: >
            ""
          light: >
            ""
    side_nav_menu:
      style: 
        base:
          default: >
            ""
        list_item_icon:
          default: >
            min-width:30px; max-width:30px; 
            margin:0; padding:0; align-self:center;
        list_item_icon_icon:
          default: >
            color:#ffffff; font-size:20px;
        list_item_contents:
          default: >
            padding-left:15px; color:#ffffff;
        list_item_title:
          default: >
            font-size:0.9rem;
          small: >
            font-size:0.85rem;
    work_area:
      style: 
        base:
          default: >
            min-width:1570px; max-width:1570px !important;
            border-left:1px dashed #cccccc;
            border-right:1px dashed #cccccc;
            height: 1599px; top:200px;
            background-color:#f1f5f9;
            margin:0; padding:0;
            position:absolute; left:10px; z-index:777;
          light: >
            min-width:1570px; max-width:1570px !important;
            border-left:1px dashed #cccccc;
            border-right:1px dashed #cccccc;
            height: 1599px; top:200px;
            background-color:#f1f5f9;
            margin:0; padding:0;
            position:absolute; left:256px; z-index:777;

# 데이터가공 paramater 정의
processing_params:
  single_process:
    type:
      -
        name: fill
        title: 결측값처리
      -
        name: transform
        title: 변환
      -
        name: extract
        title: 추출
      -
        name: scale
        title: 스케일링
      -
        name: nlp
        title: 자연어처리
    config:
      dtype:
        int64:
          fill:
            values: [missing_num_imputer]
            default: missing_num_imputer
          transform:
            values: [quantile_transformer, kbins_discretizer]
            default: quantile_transformer
          scale:
            values: [standard_scaler, minmax_scaler]
            default: standard_scaler
        float64:
          fill:
            values: [missing_num_imputer]
            default: missing_num_imputer
          transform:
            values: [quantile_transformer, kbins_discretizer]
            default: quantile_transformer
          scale:
            values: [standard_scaler, minmax_scaler]
            default: standard_scaler
        object:
          fill:
            values: [missing_cat_imputer]
            default: missing_cat_imputer
          transform:
            values: [ordinal_encoder]
            default: ordinal_encoder
          extract:
            values: [re_extract]
            default: re_extract
          nlp:
            values: [형태소 분석, 명사 추출]
            default: 형태소 분석
        datetime64[ns]:
          fill:
            values: [missing_cat_imputer]
            default: missing_cat_imputer
          transform:
            values: [ordinal_encoder]
            default: ordinal_encoder
          extract:
            values: [re_extract]
            default: re_extract
      additional_config:
        quantile_transformer:
          option:
            -
              name: output_distribution
              type: select
              values: ['uniform', 'normal']
              default: 'uniform'
            - 
              name: n_quantiles
              type: slider
              values: [10, 1000, 1, 10] # min, max, step, default
        kbins_discretizer:
          option:
            -
              name: strategy
              type: select
              values: ['quantile', 'uniform', 'kmeans']
              default: 'quantile'
            - 
              name: n_bins
              type: slider
              values: [5, 1000, 1, 5] # min, max, step, default
        missing_num_imputer:
          option:
            -
              name: imputer
              type: select
              values: ['most_frequent', 'median', 'mean',  'constant']
              default: most_frequent
            - 
              name: value
              type: text
              value: ""
        missing_cat_imputer:
          option:
            -
              name: imputer
              type: select
              values: ['most_frequent', 'constant']
              default: most_frequent
            - 
              name: value
              type: text
              value: ""
        re_extract:
          option:
            -
              name: regex
              type: text
              value: '(.*)'
        형태소 분석:
          option:
            -
              name: package
              type: select
              values: ['komoran', 'hannanum']
              default: komoran
        명사 추출:
          option:
            -
              name: package
              type: select
              values: ['komoran', 'hannanum']
              default: komoran
 
 # 학습 parameter 정의
training_params:
  ludwig:
    config:
      input:
        dtype:
          int64: 
            values: [numerical, binary, category, date]
            default: numerical
          int32:
            values: [numerical, binary, category, date]
            default: numerical
          float64: 
            values: [numerical, category]
            default: numerical
          object: 
            values: [category, binary, date, text, timeseries]
            default: category
          category: 
            values: [category, binary, date, text, timeseries]
            default: category
          bool: 
            values: [binary]
            default: binary
        encoder:
          numerical: 
            values: [passthrough, dense]
            default: passthrough
          binary: 
            values: [passthrough]
            default: passthrough
          category: 
            values: [dense, sparse]
            default: dense
          date: 
            values: [embed, wave]
            default: embed
          text: 
            values: [transformer, parallel_cnn, embed, stacked_cnn, stacked_parallel_cnn, rnn, cnnrnn, passthrough]
            default: transformer
          timeseries: 
            values: [transformer, parallel_cnn, embed, stacked_cnn, stacked_parallel_cnn, rnn, cnnrnn, passthrough]
            default: transformer
        additional_config:
          numerical:
            passthrough: {}
            dense:
              activation: 
                values: [relu, sigmoid, softmax, tanh]
                default: relu
              num_fc_layers: [0, 10, 1, 1] # min, max, step, default
              fc_size: [1, 1024, 1, 256] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
          binary:
            passthrough: {}
          category:
            dense:
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            sparse: {}
          date:
            embed:
              num_fc_layers: [0, 10, 1, 1] # min, max, step, default
              fc_size: [1, 1024, 1, 256] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            wave:
              num_fc_layers: [0, 10, 1, 1] # min, max, step, default
              fc_size: [1, 1024, 1, 256] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
          text:
            transformer:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            parallel_cnn:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            embed:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            stacked_cnn:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            stacked_parallel_cnn:
              representation:
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            rnn:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            cnnrnn:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            passthrough:
          timeseries:
            transformer:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            parallel_cnn:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            embed:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            stacked_cnn:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            stacked_parallel_cnn:
              representation:
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            rnn:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, step, default
            cnnrnn:
              representation: 
                values: [dense, sparse]
                default: dense
              embedding_size: [0, 1024, 1, 50] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            passthrough: {}
      output:
        dtype:
          int64: 
            values: [numerical, binary, category]
            default: numerical
          int32: 
            values: [numerical, binary, category]
            default: numerical
          float64: 
            values: [numerical, category]
            default: numerical
          object:
            values: [category, binary]
            default: category
          category: 
            values: [category, binary]
            default: category
          bool:
            values: [binary, category]
            default: binary
        model_type:
          numerical: 
            values: [regressor]
            default: regressor
          binary: 
            values: [regressor]
            default: regressor
          category:
            values: [classifier]
            default: classifier
        additional_config:
          numerical:
            regressor:
              activation: 
                values: [relu, sigmoid, softmax, tanh]
                default: relu
              num_fc_layers: [0, 10, 1, 1] # min, max, step, default
              fc_size: [1, 1024, 1, 256] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            classifier: {}
          binary:
            regressor: 
              activation: 
                values: [relu, sigmoid, softmax, tanh]
                default: relu
              num_fc_layers: [0, 10, 1, 1] # min, max, step, default
              fc_size: [1, 1024, 1, 256] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default
            classifier: {}
          category: 
            regressor: {}
            classifier:
              activation: 
                values: [relu, sigmoid, softmax, tanh]
                default: softmax
              num_fc_layers: [0, 10, 1, 1] # min, max, step, default
              fc_size: [1, 1024, 1, 256] # min, max, step, default
              dropout: [0.00, 0.99, 0.01, 0] # min, max, step, default

workbook_icons:
  - mdi-bullseye
  - language
  - apps
  - stream
  - select_all
  - waves
  - tune
  - blur_on
  - grid_on
  - filter_vintage
  - business
  - grid_view
  - memory
  - graphic_eq
  - access_time
  - margin
  - star_outline
  - panorama_photosphere
  - camera
  - pages

workbook_colors:
  - F1DDBF
  - 525E75
  - 78938A
  - 92BA92